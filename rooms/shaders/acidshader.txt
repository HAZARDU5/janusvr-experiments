#version 120
	//Modified Gaeel Acid Shader mod *(Modified daxnitro curviture mod)
	//Changes were made to the original shader that now allows the mod to run on v2.0.2 of GLSL
varying vec4 color;
varying vec4 texcoord;
varying vec4 lmcoord;

attribute vec4 mc_Entity;

uniform int worldTime;
uniform int ScrLckState;

void main() {
		//TextureCoordinates Generally don't mess with this
	texcoord = gl_TextureMatrix[0] * gl_MultiTexCoord0;
	
	if (gl_Color.a != 0.8 && ScrLckState == 1) 
	{
		vec4 position = gl_ModelViewMatrix * gl_Vertex;
		float distanceSquared = position.x * position.x + position.z * position.z;
        position.y += 5*sin(distanceSquared*sin(float(worldTime)/143.0)/1000);
		float y = position.y;
		float x = position.x;
			//Easter egg of my version that causes a pulling away from the Z-axis causing a stretching and shrinking sort of effect
		float z = position.z * ( (sin(float(worldTime)/256.0) + 1.75) / 2);
		float om = sin(distanceSquared*sin(float(worldTime)/256.0)/5000) * sin(float(worldTime)/200.0);
		position.y = x*sin(om)+y*cos(om);
		position.x = x*cos(om)-y*sin(om);
		position.z = z;
			//Update position of the object
		gl_Position = gl_ProjectionMatrix * position;
		//color = vec4( pow( sin(float(worldTime) * (position.x/3)/256.0), float(2.0) ) , pow( cos(float(worldTime) * (position.y/3)/512.0), float(2.0) ) , pow( cos(float(worldTime)/256.0 ), float(2.0) ) , gl_Color.a);
		//color = vec4( sqrt( vec4(gl_Color) ) ) + vec4( (sin(position.x) + sin(float(worldTime/256.0)) + 2.0 ) / 5.0, (sin(position.y) + cos(float(worldTime/256.0)) + 2.0)/5.0, (sin(position.z) + 3.0)/5.0, gl_Color.a);
		color = vec4( sqrt( vec4(gl_Color) ) ) + vec4(  (10/position.z) *  ( sin(position.x) * sin(z * 2) ),  (10/position.z) *  (sin(position.y) * cos(z) ),  (10/position.z) *  (sin(position.z * sin(z * 2)) ), 0);
	}	
	else 	//If the object is a cloud perform normal transformations
	{ 
		gl_Position = ftransform();
		color = gl_Color;
	}
		
	
	lmcoord = gl_TextureMatrix[1] * gl_MultiTexCoord1;
	
	gl_FogFragCoord = gl_Position.z;
}